Que1=List all the books that are written by Author Loni and has price less then 600.

ans=mysql> use firstbit_sql;
Database changed
mysql> table books;
+---------+-----------------------+---------------+--------+----------+
| book_No | book_Name             | author_Name   | cost   | category |
+---------+-----------------------+---------------+--------+----------+
|     101 | Let us C              | Denis Ritchie | 450.00 | System   |
|     102 | Oracle - Complete Ref | Loni          | 550.00 | Database |
|     103 | Mastering SQL         | Loni          | 250.00 | Database |
|     104 | PL SQL-Ref            | Scott Urman   | 750.00 | Database |
|     105 | Database Systems      | C.J. Date     | 600.00 | Database |
|     106 | Fictional Minds       | Alan Palmer   | 320.00 | Fiction  |
|     107 | RDBMS Concepts        | Korth         | 700.00 | RDBMS    |
+---------+-----------------------+---------------+--------+----------+
7 rows in set (0.00 sec)

mysql> select * from books where author_name="loni" and cost<600;
+---------+-----------------------+-------------+--------+----------+
| book_No | book_Name             | author_Name | cost   | category |
+---------+-----------------------+-------------+--------+----------+
|     102 | Oracle - Complete Ref | Loni        | 550.00 | Database |
|     103 | Mastering SQL         | Loni        | 250.00 | Database |
+---------+-----------------------+-------------+--------+----------+
2 rows in set (0.00 sec)


Que2=List the Issue details for the books that are not returned yet. 

ans= mysql> table issue;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | Return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-25 | NULL        |
|         7002 |     102 |         2 | 2006-12-10 | NULL        |
|         7003 |     104 |         1 | 2006-01-15 | NULL        |
|         7004 |     101 |         1 | 2006-07-04 | NULL        |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)

mysql> select * from issue where return_date is null;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | Return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-25 | NULL        |
|         7002 |     102 |         2 | 2006-12-10 | NULL        |
|         7003 |     104 |         1 | 2006-01-15 | NULL        |
|         7004 |     101 |         1 | 2006-07-04 | NULL        |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)

Que3= Update all the blank return_date with 31-Dec-06 excluding 7005 and 7006.
Ans= mysql> select * from issue where return_date is null;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | Return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-25 | NULL        |
|         7002 |     102 |         2 | 2006-12-10 | NULL        |
|         7003 |     104 |         1 | 2006-01-15 | NULL        |
|         7004 |     101 |         1 | 2006-07-04 | NULL        |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)

mysql> update issue set return_date="2006-12-31"
    -> where return_date is null and lib_issue_id not in(7005,7006);
Query OK, 4 rows affected (0.04 sec)
Rows matched: 4  Changed: 4  Warnings: 0

mysql> table issue;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | Return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-25 | 2006-12-31  |
|         7002 |     102 |         2 | 2006-12-10 | 2006-12-31  |
|         7003 |     104 |         1 | 2006-01-15 | 2006-12-31  |
|         7004 |     101 |         1 | 2006-07-04 | 2006-12-31  |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)


Que5= List all the books that have price in range of 500 to 750 and has

category as Database.


mysql> select * from books where cost between 500 and 750 and category="Data
base";
+---------+-----------------------+-------------+--------+----------+
| book_No | book_Name             | author_Name | cost   | category |
+---------+-----------------------+-------------+--------+----------+
|     102 | Oracle - Complete Ref | Loni        | 550.00 | Database |
|     104 | PL SQL-Ref            | Scott Urman | 750.00 | Database |
|     105 | Database Systems      | C.J. Date   | 600.00 | Database |
+---------+------------------

Que6=List all the books that belong to any one of the following
categories Science, Database, Fiction, Management.

Ans = mysql> select * from books where category in('system','fiction','database');
+---------+-----------------------+---------------+--------+----------+
| book_No | book_Name             | author_Name   | cost   | category |
+---------+-----------------------+---------------+--------+----------+
|     101 | Let us C              | Denis Ritchie | 450.00 | System   |
|     102 | Oracle - Complete Ref | Loni          | 550.00 | Database |
|     103 | Mastering SQL         | Loni          | 250.00 | Database |
|     104 | PL SQL-Ref            | Scott Urman   | 750.00 | Database |
|     105 | Database Systems      | C.J. Date     | 600.00 | Database |
|     106 | Fictional Minds       | Alan Palmer   | 320.00 | Fiction  |


Que7=List all the members in the descending order of Penalty due on

them.

Ans= mysql> select * from member order by penalty_amount desc;
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name | member_address | aac_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa       | pune           | 2025-12-10    | lifetime        |     25000 |                 5 |          50.00 |
|         3 | Ritik       | pune           | 2025-02-01    | Annua           |      1500 |                 6 |          25.00 |
|         4 | Ram         | poona          | 2025-06-01    | Annual
 |      1000 |                 6 |          20.00 |
|         5 | Shyam       | Hyderabad      | 2025-05-08    | Annual
 |       800 |                 4 |          10.00 |
|         2 | Garima sen  | pune           | 2025-06-05    | annual
 |      1000 |                 3 |           NULL |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+

Que8=Modify the price of book with id 103 to Rs 300 and category to
RDBMS.

Ans = mysql> update books
    -> set cost=300,
    -> category='RDBMS' where book_no=103;
Query OK, 1 row affected (0.03 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> table books;
+---------+-----------------------+---------------+--------+----------+
| book_No | book_Name             | author_Name   | cost   | category |
+---------+-----------------------+---------------+--------+----------+
|     101 | Let us C              | Denis Ritchie | 450.00 | System   |
|     102 | Oracle - Complete Ref | Loni          | 550.00 | Database |
|     103 | Mastering SQL         | Loni          | 300.00 | RDBMS    |
|     104 | PL SQL-Ref            | Scott Urman   | 750.00 | Database |
|     105 | Database Systems      | C.J. Date     | 600.00 | Database |
|     106 | Fictional Minds       | Alan Palmer   | 320.00 | Fiction  |
|     107 | RDBMS Concepts        | Korth         | 700.00 | RDBMS    |
+---------+-----------------------+---------------+--------+----------+

Que9=Modify the price of book with id 103 to Rs 300 and category to
RDBMS.

Ans=mysql> select * from books where book_no =103;
+---------+---------------+-------------+--------+----------+
| book_No | book_Name     | author_Name | cost   | category |
+---------+---------------+-------------+--------+----------+
|     103 | Mastering SQL | Loni        | 300.00 | RDBMS    |


Que10= List all the books that contain word SQL in the name of the book.

Ans = mysql> select * from books where book_name like "%SQL%";
+---------+---------------+-------------+--------+----------+
| book_No | book_Name     | author_Name | cost   | category |
+---------+---------------+-------------+--------+----------+
|     103 | Mastering SQL | Loni        | 300.00 | RDBMS    |
|     104 | PL SQL-Ref    | Scott Urman | 750.00 | Database |
+---------+---------------+-------------+--------+----------+

Que12 =Find the details of the member of the Library in the order of their

joining the library.


ans= mysql> select * from member order by aac_open_date ;
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name | member_address | aac_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         3 | Ritik       | pune           | 2025-02-01    | Annual
 |      1500 |                 6 |          25.00 |
|         5 | Shyam       | Hyderabad      | 2025-05-08    | Annual
 |       800 |                 4 |          10.00 |
|         4 | Ram         | poona          | 2025-06-01    | Annual
 |      1000 |                 6 |          20.00 |
|         2 | Garima sen  | pune           | 2025-06-05    | annual
 |      1000 |                 3 |           NULL |
|         1 | Richa       | pune           | 2025-12-10    | lifetime        |     25000 |                 5 |          50.00 |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+

Que13=Display the count of total no of books issued to Member 101.

Ans= mysql> table issue;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | Return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-25 | 2006-12-31  |
|         7002 |     102 |         2 | 2006-12-10 | 2006-12-31  |
|         7003 |     104 |         1 | 2006-01-15 | 2006-12-31  |
|         7004 |     101 |         1 | 2006-07-04 | 2006-12-31  |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)

mysql> select count(*) from issue where book_no=101;
+----------+
| count(*) |
+----------+
|        3 |
+----------+
1 row in set (0.01 sec)

Que14=Display the total penalty due for all the members.

Ans=
mysql> table member;
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name | member_address | aac_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa       | pune           | 2025-12-10    | lifetime        |     25000 |                 5 |          50.00 |
|         2 | Garima sen  | pune           | 2025-06-05    | annual
 |      1000 |                 3 |           NULL |
|         3 | Ritik       | pune           | 2025-02-01    | Annual
 |      1500 |                 6 |          25.00 |
|         4 | Ram         | poona          | 2025-06-01    | Annual
 |      1000 |                 6 |          20.00 |
|         5 | Shyam       | Hyderabad      | 2025-05-08    | Annual
 |       800 |                 4 |          10.00 |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
5 rows in set (0.00 sec)

mysql> select sum(penalty_amount) from member;
+---------------------+
| sum(penalty_amount) |
+---------------------+
|              105.00 |
+---------------------+
1 row in set (0.00 sec)

Que15= Display the total no of members

Ans= mysql> select count(*) from member;
+----------+
| count(*) |
+----------+
|        5 |
+----------+

Que16=Display the total no of books issued

Ans= mysql> select count(*) from books;
+----------+
| count(*) |
+----------+
|        7 |
+----------+
1 row in set (0.01 sec)

Que17=Display the average membership fees paid by all the members

Ans=
mysql> select avg(fees_paid) from member;
+----------------+
| avg(fees_paid) |
+----------------+
|      5860.0000 |
+----------------+
1 row in set (0.00 sec)

Que18=List the various categories and count of books in each category.

Ans= mysql> select category,count(*) from books group by category;
+----------+----------+
| category | count(*) |
+----------+----------+
| System   |        1 |
| Database |        3 |
| RDBMS    |        2 |
| Fiction  |        1 |
+----------+----------+
4 rows in set (0.01 sec)

Que19=List the book_No and the number of times the book is issued in the
descending order of count.

Ans= mysql> select book_no,count(*) from issue
    -> group by book_no;
+---------+----------+
| book_no | count(*) |
+---------+----------+
|     101 |        3 |
|     102 |        1 |
|     104 |        2 |
+---------+----------+
3 rows in set (0.00 sec)

Que20= Find the maximum, minimum, total and average penalty amount in
the member table.

Ans= mysql> select count(*),max(fees_paid),min(fees_paid),sum(fees_paid),avg(fees_paid) from member;
+----------+----------------+----------------+----------------+----------------+
| count(*) | max(fees_paid) | min(fees_paid) | sum(fees_paid) | avg(fees_paid) |
+----------+----------------+----------------+----------------+----------------+
|        5 |          25000 |            800 |          29300 |      5860.0000 |
+----------+----------------+----------------+----------------+----------------+
1 row in set (0.00 sec)

Que21=Display the member id and the no of books for each member that
has issued more then 2 books.

Ans = mysql> table issue;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | Return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-25 | 2006-12-31  |
|         7002 |     102 |         2 | 2006-12-10 | 2006-12-31  |
|         7003 |     104 |         1 | 2006-01-15 | 2006-12-31  |
|         7004 |     101 |         1 | 2006-07-04 | 2006-12-31  |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)

mysql> select member_id,count(*) from issue group by member_id having count(*) >2;
+-----------+----------+
| member_id | count(*) |
+-----------+----------+
|         1 |        3 |
+-----------+----------+
1 row in set (0.02 sec)

Que22= Display the member id, book no and no of times the same book is
issued by the member in the descending order of count.







Que23= Display the month and no of books issued each month in the
descending order of count.

ans=
mysql> select Month(issue_date) As Issue_Month,count(*) As Book_Issued
    -> from issue
    -> group by Issue_Month
    -> order by Book_Issued desc;
+-------------+-------------+
| Issue_Month | Book_Issued |
+-------------+-------------+
|          12 |           2 |
|           1 |           1 |
|           7 |           1 |
|          11 |           1 |
|           2 |           1 |
+-------------+-------------+
5 rows in set (0.01 sec)

Que24=List the book_no of all the books that are not issued to any
member so far.

Ans=mysql> table books;
+---------+-----------------------+---------------+--------+----------+
| book_No | book_Name             | author_Name   | cost   | category |
+---------+-----------------------+---------------+--------+----------+
|     101 | Let us C              | Denis Ritchie | 450.00 | System   |
|     102 | Oracle - Complete Ref | Loni          | 550.00 | Database |
|     103 | Mastering SQL         | Loni          | 300.00 | RDBMS    |
|     104 | PL SQL-Ref            | Scott Urman   | 750.00 | Database |
|     105 | Database Systems      | C.J. Date     | 600.00 | Database |
|     106 | Fictional Minds       | Alan Palmer   | 320.00 | Fiction  |
|     107 | RDBMS Concepts        | Korth         | 700.00 | RDBMS    |
+---------+-----------------------+---------------+--------+----------+
7 rows in set (0.00 sec)

mysql> select book_no from books
    -> where book_no Not in(select book_no from issue);
+---------+
| book_no |
+---------+
|     103 |
|     105 |
|     106 |
|     107 |
+---------+
4 rows in set (0.00 sec)

Que25=List all the member id that exist in member table and has also at
least one book issued by them.

Ans=
mysql> select member_id from member
    -> where member_id in(select member_id from issue);
+-----------+
| member_id |
+-----------+
|         1 |
|         2 |
|         3 |
+-----------+
3 rows in set (0.03 sec)

Que26=List the member ID with highest and lowest no of books issued.

Ans=mysql> table issue;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | Return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-25 | 2006-12-31  |
|         7002 |     102 |         2 | 2006-12-10 | 2006-12-31  |
|         7003 |     104 |         1 | 2006-01-15 | 2006-12-31  |
|         7004 |     101 |         1 | 2006-07-04 | 2006-12-31  |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)

mysql> select member_id,count(*) As books_Issued from issue
    -> group by member_id;
+-----------+--------------+
| member_id | books_Issued |
+-----------+--------------+
|         1 |            3 |
|         2 |            2 |
|         3 |            1 |
+-----------+--------------+
3 rows in set (0.00 sec)

Que27=List all the Issue_details for books issued in December and July
without using any arithmetic, Logical or comparison operator.

Ans=